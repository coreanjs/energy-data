---
title: "KIER기술정책플랫폼"
date : last-modified # now
author: 
 - name: "안지석"
   affiliation: "한국에너지기술연구원 정책연구실"
title-block-banner: false
format: 
  html:
    theme: flatly
    code-fold: false
    toc: true
    toc-depth: 2
    toc-title: 목차
    number-sections : true
    highlight-style: github
    self-contained: false
link-citation: true
csl: apa-single-spaced.csl
reference-location: margin
execute:
  echo: true
  warning: false
  
freeze: true
---

# 통계청 소비자물가지수를 활용한 분석

```{r}
library(tidyverse)
library(readxl)
library(lubridate)
library(zoo)
library(showtext)
library(extrafont)

showtext_auto()

font_add_google("Nanum Gothic", "nanumgothic")
font_add_google("Poor Story", "poorstory")


#R 버전 알려주는 코드 
R.version


price_raw <- read_excel("230821_생활물가지수.xlsx", sheet ="Sheet1")


unique(price_raw$type)


price_tidy<- price_raw %>% 
  pivot_longer(-type, values_to ="value", names_to = "date") %>% 
  mutate(date = zoo::as.yearmon(date, "%Y.%m"),
         color_label = case_when(type =='경유'~ type,
                                 type =="도시가스" ~ type,
                                 TRUE ~ '기타'))

range(price_tidy$date)



```

```{r out.width ="80%"}


price_img <- price_tidy %>% 
  ggplot() +
  geom_line(data =. %>% filter(!type %in% c("도시가스", "경유")), aes(x = date, y = value, group = type), linewidth = 1.2,  color ="gray")+
  geom_line(data =. %>% filter(type =="경유"), aes(x = date, y = value), linewidth = 1.5,  color ="red")+
  geom_line(data =. %>% filter(type =="도시가스"), aes(x = date, y = value), linewidth = 1.5,  color ="blue")+
    theme_bw()+
  theme_minimal()+
  theme(plot.title = element_text(family="nanumgothic"))+
  labs(title ="물가지수에서 경유와 도시가스만 표기",
       subtitle ="물가지수에서 에너지가 차지하는 정도를 보기 위해 만들었다")

price_img


```

![](경유와%20휘발유.png)

```{r}
#| warning: false
  
library(zoo)
library(ggtext)
price_tidy %>% 
  #ggplot(aes(x = date, y = value, group = type, color = color_label))+
  ggplot() +
  geom_line(data =. %>% filter(!type %in% c(
    #"도시가스", 
    #"경유", 
    #"휘발유"
    "전기료"
  )), 
  aes(x = date, y = value, group = type), size = 1.5,  color ="gray")+
  geom_line(data =. %>% filter(type =="전기료"), aes(x = date, y = value), size = 2,  color ="#f7c93a")+
  #geom_line(data =. %>% filter(type =="전기료"), aes(x = date, y = value), size = 1.5,  color ="brown")+
  #scale_x_date(date_breaks = "1 year", date_labels =paste0("'", "%y"))+
  theme_bw()+
  scale_y_continuous(limits = c(0, 200))+
  theme_minimal()+
  theme(plot.title = element_text(size = 24, family="nanumgothic"),
        plot.subtitle =element_markdown(size = 20),
        plot.background =element_rect(fill="white"),
        panel.grid.minor = element_blank(),
        panel.grid.major.x =element_blank())+
  labs(y = "물가지수",
       x ='연도',
       title ="통계청 생활물가지수를 통해서 보는 에너지 물가",
       subtitle ="물가지수에서 <span style = 'color:#f7c93a;'>전기료</span>만 표기",
       caption = "Source: 통계청, Graphic: Jiseok")

```

```{r}
library(gghighlight)
price_tidy %>% 
  #ggplot(aes(x = date, y = value, group = type, color = color_label))+
  ggplot(aes(x = date, y = value, group = type)) +
  geom_line(linewidth = 1.2, color ='#f4481a')+
  gghighlight()+
  #scale_x_date(date_breaks = "1 year", date_labels =paste0("'", "%y"))+
  theme_bw()+
  theme_minimal()+
  facet_wrap(~type)+
  theme(plot.title = element_text(size = 24, family="nanumgothic"),
        plot.background =element_rect(fill="white"),
        panel.grid.minor = element_blank(),
        panel.grid.major.x =element_blank())+
  labs(title ="물가지수",
       subtitle ="물가지수에서 에너지가 차지하는 정도를 보기 위해 만들었다",
       caption = "Source: 통계청, Graphic: Jiseok")

```

-   주어진 10개의 물가지수 중 어떤 걸 강조할 것인지 - 스토리텔링
-   도시가스? 전기료? 휘발유? 경유?

참고 유튜브

[Applying concepts from Storytelling with Data in R using ggplot2](https://youtu.be/rkQREY_FfqI?si=e9PxnzjNstY6CjVY)

# 암모니아 수용성 분석

-   목적: 암모니아 수용성 분석 결과 시각화
-   주요 내용
    -   암모니아의 폭발, 독성, 냄새에 대한 일반 국민의 수용성 분석
    -   일반 국민의 개인 특성에 따른 수용성 분석

# R&D 프로젝트의 위험 요인과 위험 관리 전략 분석

-   목적: 네트워크 분석을 통해 R&D 프로젝트의 위험 요인 간 상관관계와 위험 관리 전략 분석

# 신재생에너지 잠재량 Vs 신재생에너지 발전량

-   태양광 중심의 신재생에너지 잠재량 대비 신재생에너지 발전량을 비교하여 지도 형태로 제시
-   신재생빅데이터연구실의 신재생에너지 기술적 잠재량과 한국에너지공단 신재생에너지센터 보급통계 발전량을 활용
-   잠재량은 높으나 보급통계 발전량이 낮을 경우 기술적, 정책적 해결책 제시 등으로 발전(가능하다면...)

# 텍스트 마이닝을 활용한 정권별 에너지정책 이슈 분석

-   에너지정책 관련 언론보도 분석을 통해 에너지정책 분야 주요 이슈의 특징, 경향, 변화 방향 분석
-   키워드 동시출현 빈도 네트워크, 키워드 간 상관관계 네트워크 분석 등 수행

## 사전 설치

```{r}
library(KoNLP)
useNIADic()
useSejongDic()

```

## 전처리

```{r}



setwd("C:/R/Rproject/Energy&Data/20230838_Energy_Issues_Bigkinds")

news.raw<- read_excel("climate change.xlsx")

str(news.raw)

news.selected<- news.raw %>% 
    select(일자, 언론사, `특성추출(가중치순 상위 50개)`) %>% 
    #  mutate(키워드 = str_replace_all(키워드, ',', ' ')) %>% 
    rename(keyword = `특성추출(가중치순 상위 50개)`,
           date = 일자,
           source = 언론사) %>% 
    mutate(date = as.Date(date, format="%Y%m%d"),
           president = case_when(date >= as.Date('2008-02-05') & date <= as.Date('2013-02-24') ~ '이명박',
                                 date >= as.Date('2013-02-25') & date <= as.Date('2017-03-10')~ '박근혜',
                                 date >= as.Date('2017-05-10') & date <= as.Date('2022-05-09') ~ '문재인',
                                 date >= as.Date('2022-05-10')  ~ '윤석열'),
           president = factor(president, levels = c('이명박', '박근혜', '문재인', '윤석열')))


news.selected

## complete.cases를 활용해 결측행만 보기 박근혜 탄핵 후 - 문재인 임명 전까지는 NA

news.selected[!complete.cases(news.selected),]

## complete.cases를 활용해 박근혜와 문재인 사이 빈 기간 날리기

news.selected <- news.selected %>% filter(complete.cases(news.selected))



head(news.selected)

tail(news.selected)



## 몇개의 사설??
nrow(news.selected)


news.selected %>% 
    group_by(president) %>% 
    count(n = n()) %>%
    ungroup() %>% 
    mutate(pct = nn/n*100)






### 월별로 정리해서 보기 - 모든 기간
news.selected %>% 
    mutate(ym = as.yearmon(date)) %>% 
    group_by(ym, president) %>% 
    count( n = n()) %>% 
    ggplot(aes(x = as.Date(ym), y = nn))+
    geom_col(fill ="#1f5c99")+
    scale_x_date(date_breaks = "1 year", date_labels = "'%y. %b.")+ 
    geom_vline(xintercept = as.Date('2008-02-05'), color ="red", linetype ="dashed")+
    geom_vline(xintercept = as.Date('2013-02-25'), color ="red", linetype ="dashed")+
    geom_vline(xintercept = as.Date('2017-05-10'), color ="red", linetype ="dashed")+
    geom_vline(xintercept = as.Date('2022-05-10'), color ="red", linetype ="dashed")+
    theme(
        text = element_text(family = 'Nanum Myeongjo'),
        panel.grid.minor.x = element_blank(),
        #panel.grid.major.x = element_blank(),
        #    panel.grid.major.y = element_blank(),
        #axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        axis.ticks.x = element_blank(),
        strip.text.x = element_text(size = 11),
        legend.position = "none")+
    labs(y = '사설 수',
         x = '날짜')



news.selected %>% 
    mutate(ym = as.yearmon(date)) %>% 
    group_by(ym, president) %>% 
    count( n = n()) %>% 
    ggplot(aes(x = as.Date(ym), y = nn))+
    geom_col(fill ="#1f5c99")+
    scale_x_date(date_breaks = "1 year", date_labels = "'%y. %b.")+ facet_wrap(~president, ncol = 1)+
    
    theme(
        text = element_text(family = 'Nanum Myeongjo'),
        panel.grid.minor.x = element_blank(),
        #panel.grid.major.x = element_blank(),
        #    panel.grid.major.y = element_blank(),
        #axis.text.x = element_blank(),
        axis.text.y = element_text(size = 12),
        axis.ticks.x = element_blank(),
        strip.text.x = element_text(size = 11),
        legend.position = "none")+
    labs(y = '사설 수',
         x = '날짜')+
    geom_smooth(color ="yellow")

```

```{r}


library(tidytext)



news.selected

news.selected %>% 
    select(keyword) %>% 
    separate_rows(keyword, sep= ",")


news.keyword<- news.selected %>% 
    separate_rows(keyword, sep= ",") %>% 
    rename(word = keyword) %>% 
    filter(str_length(word) > 1) %>% 
    count(president, word, sort = TRUE) %>%
    filter(!word %in% c('만큼', '그동안', '각국'))


news.keyword

## slice 활용해서 상위 n개만 보기
news.keyword %>% 
    group_by(president) %>%
    mutate(row_number = row_number(),
           word = reorder_within(word, n, president)) %>% 
    slice(1:20) %>% 
    ggplot(aes(x = word, y = n))+
    geom_col(fill ="#1f5c99")+
    coord_flip()+
    scale_x_reordered()+
    facet_wrap(~president, scales = "free_y", nrow = 1)+
    theme(
        text = element_text(family = 'Nanum Myeongjo'),
        panel.grid.minor.x = element_blank(),
        #panel.grid.major.x = element_blank(),
        #    panel.grid.major.y = element_blank(),
        #axis.text.x = element_blank(),
        axis.text.y = element_text(size = 12),
        axis.ticks.x = element_blank(),
        strip.text.x = element_text(size = 11),
        legend.position = "none")+
    labs(y = '사설 수',
         x = '날짜')




news.keyword %>% 
    group_by(word) %>% 
    summarise(n = sum(n)) %>% 
    top_n(20) %>% 
    ggplot(aes(x = reorder(word, n), y = n))+
    geom_col(fill ="#1f5c99")+
    coord_flip()+
    theme(
        text = element_text(family = 'Nanum Myeongjo'),
        panel.grid.minor.x = element_blank(),
        #panel.grid.major.x = element_blank(),
        #    panel.grid.major.y = element_blank(),
        #axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        axis.ticks.x = element_blank(),
        strip.text.x = element_text(size = 11),
        legend.position = "none")+
    labs(y = '단어 수',
         x = '단어')

```

## 특정 키워드만 ('미국) 보기 - 미국이 들어간 컬럼만 보기

```{r}
news.selected %>% 
    mutate(keyword_detect = ifelse(str_detect(keyword, '미국'), 'Y', 'N')) %>% 
    filter(keyword_detect =='Y') %>% 
    separate_rows(keyword, sep= ",") %>% 
    rename(word = keyword) %>% 
    filter(str_length(word) > 1) %>% 
    count(president, word, sort = TRUE) %>% 
    group_by(president) %>%
    mutate(row_number = row_number(),
           word = reorder_within(word, n, president)) %>% 
    slice(1:20) %>% 
    ggplot(aes(x = word, y = n))+
    geom_col(fill ="#1f5c99")+
    coord_flip()+
    scale_x_reordered()+
    facet_wrap(~president, scales = "free_y", nrow = 1)+
    theme(
        text = element_text(family = 'Nanum Myeongjo'),
        panel.grid.minor.x = element_blank(),
        plot.title = element_text(size = 20),
        #panel.grid.major.x = element_blank(),
        #    panel.grid.major.y = element_blank(),
        #axis.text.x = element_blank(),
        axis.text.y = element_text(size = 12),
        axis.ticks.x = element_blank(),
        strip.text.x = element_text(size = 11),
        legend.position = "none")+
    labs(title = '미국이 들어간 칼럼만 추출한 결과',
         y = '사설 수',
         x = '날짜')


```

########### 함수로 만들어서

```{r}




keyword_top5<- c('기후변화', '미국', '한국', '우리나라', '중국', '배출량', 
                 '온실가스', '전문가', '가능성', '녹색성장', '코로나19',
                 '창조경제', '탈원전')


keyword_top5



for (i in keyword_top5) {
    
    keyword_top5_by_president = news.selected %>% 
        mutate(keyword_detect = ifelse(str_detect(keyword, i), 'Y', 'N')) %>% 
        filter(keyword_detect =='Y') %>% 
        separate_rows(keyword, sep= ",") %>% 
        rename(word = keyword) %>% 
        filter(str_length(word) > 1) %>% 
        count(president, word, sort = TRUE) %>% 
        group_by(president) %>%
        mutate(row_number = row_number(),
               word = reorder_within(word, n, president)) %>% 
        slice(1:20) %>% 
        ggplot(aes(x = word, y = n))+
        geom_col(fill ="#1f5c99")+
        coord_flip()+
        scale_x_reordered()+
        facet_wrap(~president, scales = "free_y", nrow = 1)+
        theme(
            text = element_text(family = 'Nanum Myeongjo'),
            panel.grid.minor.x = element_blank(),
            plot.title = element_text(size = 20),
            #panel.grid.major.x = element_blank(),
            #    panel.grid.major.y = element_blank(),
            #axis.text.x = element_blank(),
            axis.text.y = element_text(size = 12),
            axis.ticks.x = element_blank(),
            strip.text.x = element_text(size = 11),
            legend.position = "none")+
        labs(title = paste('특정 키워드가 포함된 (키워드 :', i ,  ')칼럼만 추출하여 빈도 분석'),
             y = '사설 수',
             x = '날짜')
    
    
    plot(keyword_top5_by_president)
}
```

## 정권별로 구분해서? - count로

```{r}

news.keyword %>% 
    group_by(word) %>% 
    mutate(total = sum(n),
           pct = round(n/total*100, 0)) %>% 
    #top_n(20) %>% 
    filter(n>=50) %>% 
    ggplot(aes(x = reorder(word, n, sum), y = n, fill = president))+
    geom_col()+
    coord_flip()+
    theme(
        text = element_text(family = 'Nanum Myeongjo'),
        panel.grid.minor.x = element_blank(),
        #panel.grid.major.x = element_blank(),
        #    panel.grid.major.y = element_blank(),
        axis.text.x = element_text(angle = 45, hjust = 1),
        axis.text.y = element_text(size = 12),
        axis.ticks.x = element_blank(),
        strip.text.x = element_text(size = 11),
        #legend.position = "none"
    )+
    labs(y = '단어 수',
         x = '단어')

```

### 정권별로 구분해서? - pct로

```{r}


news.keyword %>% 
    group_by(president) %>% 
    mutate(total = sum(n)) %>% 
    ungroup() %>% 
    mutate(pct = n/total*100) %>% 
    #top_n(20) %>% 
    filter(pct >.4) %>% 
    ggplot(aes(x = reorder(word, pct, sum), y = pct, fill = president))+
    geom_col()+
    coord_flip()+
    theme(
        text = element_text(family = 'Nanum Myeongjo'),
        panel.grid.minor.x = element_blank(),
        #panel.grid.major.x = element_blank(),
        #    panel.grid.major.y = element_blank(),
        axis.text.x = element_text(angle = 45, hjust = 1),
        axis.text.y = element_text(size = 12),
        axis.ticks.x = element_blank(),
        strip.text.x = element_text(size = 11),
        #legend.position = "none"
    )+
    labs(
        x = '단어')



news.keyword %>% 
    group_by(president) %>% 
    mutate(total = sum(n)) %>% 
    ungroup() %>% 
    mutate(pct = n/total*100) %>% 
    #top_n(20) %>% 
    filter(pct >.4) %>% 
    ggplot(aes(x = reorder(word, pct, sum), y = pct, fill = president))+
    geom_col()+
    coord_flip()+
    theme(
        text = element_text(family = 'Nanum Myeongjo'),
        panel.grid.minor.x = element_blank(),
        #panel.grid.major.x = element_blank(),
        #    panel.grid.major.y = element_blank(),
        axis.text.x = element_text(angle = 45, hjust = 1),
        axis.text.y = element_text(size = 12),
        axis.ticks.x = element_blank(),
        strip.text.x = element_text(size = 11),
        #legend.position = "none"
    )+
    labs(
        x = '단어')


```

## 네트워크 만들기

```{r}


library(ggraph)
library(tidygraph)  ## 네트워크 그래프
library(widyr)   ##pairwise_count




### 함수로 만들기 전에 원본?

news.keyword


news.selected%>% 
    select(keyword) %>% 
    rowid_to_column() %>%
    separate_rows(keyword, sep= ",") %>% 
    #  unnest_tokens(input = keyword,
    #                output = word,
    #                to_lower = FALSE) %>% 
    #  filter(str_length(word) > 1) %>%  
    #  filter(!word %in% c('만큼', '그동안')) %>%  
    pairwise_count(item = keyword,     ## pairwise_count  : 단어 동시 출현 빈도
                   feature = rowid,
                   sort = T) %>% 
    filter(n >= 30) %>%  ##
    as_tbl_graph(directed = F) %>% 
    mutate(centrality = centrality_degree(),        # 연결 중심성 or centrality_edge_betweenness()  참고: https://tidygraph.data-imaginist.com/
           group = as.factor(group_louvain()))  %>% 
    ggraph(layout = "fr") +      # 레이아웃
    geom_edge_link(edge_color = "gray50",          # 엣지 색깔
                   alpha = 0.2) +             # 엣지 명암
    
    geom_node_point(aes(size = centrality,    # 노드 크기
                        color = group,
                        alpha =0.5),       # 노드 색깔
                    show.legend = F) +        # 범례 삭제
    scale_size(range = c(3, 15)) +            # 노드 크기 범위
    geom_node_text(aes(label = name),         # 텍스트 표시
                   repel = T,                 # 노드밖 표시
                   size = 5,                  # 텍스트 크기
                   family = 'Nanum Myeongjo') +  # 폰트
    
    theme_graph()+                             # 배경 삭제
    theme( text = element_text(family = 'Nanum Myeongjo'))



```

## 연결중심성 pairwise_count : 단어 동시 출현 빈도 (filter \>=50)

```{r}

pairwise_count_1<- news.selected%>% 
    select(keyword) %>% 
    rowid_to_column() %>% 
    unnest_tokens(input = keyword,
                  output = word,
                  to_lower = FALSE) %>% 
    filter(str_length(word) > 1) %>%  
    pairwise_count(item = word,     ## pairwise_count  : 단어 동시 출현 빈도
                   feature = rowid,
                   sort = T) %>% 
    filter(n >=50) %>%  ##
    as_tbl_graph(directed = F) %>% 
    mutate(centrality = centrality_degree(),        # 연결 중심성 or centrality_edge_betweenness()  참고: https://tidygraph.data-imaginist.com/
           group = as.factor(group_louvain()))  %>% 
    ggraph(layout = "fr") +      # 레이아웃
    geom_edge_link(edge_color = "gray50",          # 엣지 색깔
                   alpha = 0.2) +             # 엣지 명암
    
    geom_node_point(aes(size = centrality,    # 노드 크기
                        color = group,
                        alpha =0.5),       # 노드 색깔
                    show.legend = F) +        # 범례 삭제
    scale_size(range = c(3, 15)) +            # 노드 크기 범위
    geom_node_text(aes(label = name),         # 텍스트 표시
                   repel = T,                 # 노드밖 표시
                   size = 5,                  # 텍스트 크기
                   family = "nanumgothic") +  # 폰트
    
    theme_graph()+                             # 배경 삭제
    labs(title = "1990-2023 신문 사설을 활용한 키워드 동시출현빈도 네트워크")


pairwise_count_1

```



# 전력자립도(지역) - 출처: KESIS 


## 라이브러리랑 데이터 가져오기
데이터는 가져오면서 tidy 형태로 변환. 그리고 필요한 전처리

```{r}
library(readxl)
library(tidyverse)
elec_independency_raw<-read_excel("전력자립도(지역).xlsx", skip = 6) %>% 
  pivot_longer(-region, values_to = "pct", names_to ="year") %>% 
  mutate(year = as.numeric(year),
         region = str_remove_all(region, ".(%)."),
         pct = if_else(pct == 0, NA, pct)) ##세종은 0으로 되어있어서 NA로 바꿈



head(elec_independency_raw)
str(elec_independency_raw)
```


```{r}

elec_independency_raw %>% 
  ggplot(aes(x = year, y = pct, group = region)) +
  geom_line()


elec_independency_raw %>% 
  filter(year==2020) %>% 
  arrange(desc(pct)) %>% pull(region) ->region_order

region_order



library(gghighlight)
elec_independency_raw %>% 
  ggplot(aes(x = year, y = pct, group = as.factor(region))) +
  geom_line()+
  gghighlight()+
  facet_wrap(~fct_relevel(region, region_order))

```


```{r}

elec.independency.wider<-elec_independency_raw %>% 
    pivot_wider(names_from = year,
                values_from = pct,
                id_cols = region,
                names_prefix = 'value_') %>% 
    select(region, value_2011, value_2020) 


elec.independency.wider





elec.independency.wider %>% 
    arrange(desc(value_2020)) %>% 
    mutate(y_position = rev(1:nrow(.))) %>% 
    select(region, y_position) ->y_position_elec

y_position_elec


elec_y_position <- left_join(elec.independency.wider, y_position_elec, by = 'region') %>% 
    arrange(y_position) %>% 
    mutate(bump_2011 = case_when(value_2011 < value_2020 ~ value_2011 -18, 
                                 value_2011 > value_2020 ~  value_2011 +18,
                                 TRUE~NA_real_),
           bump_2020 = case_when(value_2011 < value_2020 ~ value_2020 +18, 
                                 value_2011 > value_2020 ~  value_2020 -18,
                                 TRUE~value_2020 + 10)) %>% 
    pivot_longer(-c('region', 'y_position'), 
                 names_to = c('.value', 'year'),
                 names_sep = "_") %>% 
    mutate(value = round(value, 1),
           bump = ifelse(region =="세종", bump+10, bump))

elec_y_position


arrow_data_elec<-elec_y_position %>% 
    pivot_wider(names_from = year, values_from = value,
                id_cols = c(region, y_position),
                names_prefix = 'year_') %>% 
    filter(abs(year_2011 - year_2020) >10) %>% 
    mutate(midpoint = (year_2011 + year_2020)/2) %>% 
    select(region, year_2011, midpoint, y_position) %>% 
    pivot_longer(-c('region', 'y_position'), names_to = "type", values_to = "x") %>% 
    mutate(x = ifelse(region %in% c('대구'), x +3, x),
           x = ifelse(region %in% c('서울', '광주'), x +2, x))


arrow_data_elec




library(shadowtext)
library(ggtext)
library(showtext)
showtext_auto()
font_add_google('Nanum Myeongjo', 'Nanum Myeongjo')


elec_y_position %>%
    ggplot(aes(x = value, y = y_position, color = year, group = y_position))+
    geom_vline(xintercept = 100, linetype ="dotted", color = "blue")+
    
    geom_line( color ="#142f38", linewidth = 1.5)+
    geom_point(size = 3)+
    geom_path(data = arrow_data_elec, aes(x = x, y = y_position, group = y_position),
              color = '#142f38',
              arrow = arrow(angle = 30, length = unit(0.1, 'inch')))+
    scale_color_manual(values =  c('#142f38', '#4ea267'),
                       #c('#727272', '#15607a'),
                       label = c('2011년', '2020년')
    )+
    scale_x_continuous(labels = function(x) paste0(x, "%"))+
    scale_y_continuous(breaks = c(elec_y_position$y_position, 1,elec_y_position$y_position+1),
                       labels = c(elec_y_position$region, rep("", length(elec_y_position$y_position)+1)))+
    geom_shadowtext(aes(label = value, x = bump, 
                        #  y = y_position -.4
    ),
    bg.colour='white', size = 4)+
    theme_bw()+
    theme_minimal()+
    guides(color = guide_legend("연도"))+
    theme(text = element_text(family = 'Nanum Myeongjo',
                              size = 14),
          plot.title = element_text(size= 20, face="bold"),
          plot.subtitle = element_markdown(size= 14,lineheight = 1.2),
          axis.text.x = element_text(size = 14),
          axis.text.y = element_text(size = 14),
          axis.title.x =element_text(size = 14),
          panel.grid.minor.x = element_blank(),
          #panel.grid.major.y = element_blank(),
          panel.grid.major.x = element_blank(),
          panel.grid.minor.y = element_blank(),
          plot.title.position = "plot",
          legend.position = "top"
    )+
    labs(title = "대한민국 17개 광역지자체별 전력자립도 변화",
         subtitle ="전력자립도는 전략 발전량을 소비량으로 나눈 백분율로, <br> <span style='color:#142f38'>**2011년**</span>과 <span style ='color:#4ea267'>2020년</span> 대한민국 광역지자체별 전력자립도 변화를 <br>덤벨차트를 활용하여 나타내었으며, 2020년 기준 내림차순으로 정렬",
         y = "",
         x = "전력자립도",
         caption = "Source : KESIS(국가에너지통계 정보시스템),\nGraphic : Jiseok")


ggsave("KESIS_elec_independency.png",  width= 550, height = 800, units ="px", dpi = 100)




elec_independency_raw %>% 
    ggplot(aes(x= as.numeric(year), y = pct, 
               #color = region, 
               group = region))+
    geom_line(data = . %>% filter(region %in% c('인천', '충남', '부산', '전남', '경남')), color ="red")+
    geom_line(data = . %>% filter(region %in% c('울산', '전북', '경기', '강원', '경북')), color ="blue")+
    geom_text(data = . %>% filter(year == 2020), aes(label =region),  hjust = -1, family = 'Nanum Myeongjo')+
    scale_x_continuous(limits = c(2011, 2021), breaks =seq(2011, 2020, 1))+
    theme_bw()+
    theme_minimal()+
    theme(text = element_text(family = 'Nanum Myeongjo',
                              size = 14),
          plot.title = element_text(size= 20, face="bold"),
          plot.subtitle = element_markdown(size= 16,lineheight = 1.2),
          axis.text.x = element_text(size = 14),
          axis.text.y = element_text(size = 14),
          axis.title.x =element_text(size = 14),
          panel.grid.minor.x = element_blank(),
          #panel.grid.major.y = element_blank(),
          panel.grid.major.x = element_blank(),
          panel.grid.minor.y = element_blank(),
          plot.title.position = "plot",
          legend.position = "none"
    )+
    labs(title = "2011-2020, 시도별 전력자립도",
         subtitle ="<span style='color:#142f38'>**2011년**</span>과 <span style ='color:#4ea267'>2020년</span>, 지자체별 전력자립도",
         y = "",
         x = "전력자립도",
         caption = "Source : KESIS(국가에너지통계 정보시스템),\nGraphic : Jiseok")



```



